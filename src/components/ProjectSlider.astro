---
import ProjectSliderSlide from '../components/ProjectSliderSlide.astro'

const { project } = Astro.props

const highlightClasses = `bg-alt rounded-full pl-3 pr-2 mr-1 pt-2 pb-1 decoration-clone leading-relaxed`
---

<div
	class:list={[
		`splide h-[calc(100svh-16px)] w-screen overflow-x-hidden mx-auto`,
		`max-w-[1440px] min-[1440px]:border-x min-[1440px]:border-grayMed`,
	]}
	aria-label="List of project images"
>
	<div
		class:list={[
			`splide__track h-[calc(100svh-16px)] w-screen max-w-[1440px]`,
			`border-b-grayMed border-b bg-grayUltraLight`,
		]}
	>
		<ul class="splide__list w-screen h-[calc(100svh-16px)] max-w-[1440px]">
			<li
				class:list={[
					`splide__slide`,
					`w-screen h-[calc(100svh-188px)] px-6 !my-20 max-w-[1440px]`,
					`flex flex-col items-center justify-center`,
				]}
			>
				<span class="text-xl block mb-3 md:mb-6">{project.year}</span>
				<h1
					class:list={[
						`text-4xl sm:text-5xl md:text-6xl 2xl:text-8xl`,
						`leading-[1em] text-balance`,
						`uppercase font-bold text-center`,
						`xs:max-w-[80%] sm:max-w-[70%] md:max-w-[60%] lg:max-w-[50%]`,
					]}
				>
					{project.title}
				</h1>
				<p
					class:list={[
						`mb-6 md:mb-8 text-balance text-center`,
						`text-xl sm:text-2xl lg:text-3xl mt-4`,
						`xs:max-w-[80%] sm:max-w-[70%] md:max-w-[60%] lg:max-w-[50%]`,
					]}
				>
					{
						project.description.map(
							(part) =>
								part.text &&
								(part.link ? (
									<a href={part.link} class={highlightClasses} target="_blank">
										{part.text.trim()}
									</a>
								) : (
									<span class={part.highlighted ? highlightClasses : ''}>
										{part.text.trim()}
									</span>
								)),
						)
					}
				</p>
			</li>
			{
				project.media.map((i) => (
					<ProjectSliderSlide projectName={project.title} imageUrl={i} />
				))
			}
		</ul>
	</div>
</div>

<script>
	import Splide from '@splidejs/splide'

	const slider = new Splide('.splide', {
		rewind: true,
		arrows: false,
		pagination: true,
		paginationKeyboard: true,
	})

	slider.mount()

	const nextButton = document.getElementById('project-next')
	const prevButton = document.getElementById('project-prev')

	nextButton.addEventListener('click', (evt) => {
		evt.preventDefault()
		slider.go('>')
	})
	prevButton.addEventListener('click', (evt) => {
		evt.preventDefault()
		slider.go('<')
	})
</script>

<style is:global>
	.splide__slide img {
		@apply rounded max-w-[calc(100svw-48px)] max-h-[calc(100svh-154px)];
	}
	.splide__pagination {
		@apply absolute left-1/2 opacity-0 sm:opacity-100 bottom-7 gap-3 -translate-x-1/2;
	}

	.splide__pagination li {
		@apply w-3 h-3;
	}

	button.splide__pagination__page {
		@apply w-3 h-3 rounded-full bg-grayMed transition-colors;
	}

	button.splide__pagination__page[aria-selected='true'] {
		@apply bg-fg;
	}
</style>
