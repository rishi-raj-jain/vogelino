---
import classNames from '../utils/classNames'
import type { BlockObjectResponse } from '@notionhq/client/build/src/api-endpoints'
import NotionFormattedRichText from './NotionFormattedRichText.astro'
import { Image } from 'astro:assets'
import type { AstroGlobImageType, AstroImageType } from '../utils/astroTypes'
import NotionTitle from './NotionTitle.astro'

export interface Props {
	blocks: BlockObjectResponse[]
}

const { blocks } = Astro.props

const blockImages = await Astro.glob<AstroGlobImageType<'webp'>>(
	'/src/assets/images/content/*.webp',
).then((files) => files.map((file) => file.default))
const blockImagesMap = blocks.reduce((acc, block) => {
	if (block.type === 'image') {
		acc.set(
			block.id,
			blockImages.find((image) => image.src.includes(block.id)),
		)
	}
	return acc
}, new Map<BlockObjectResponse['id'], AstroImageType<'webp'>>())
---

{
	blocks.map((block) => {
		if (
			block.type === 'heading_1' ||
			block.type === 'heading_2' ||
			block.type === 'heading_3'
		) {
			return <NotionTitle {...block} />
		}
		if (block.type === 'paragraph') {
			return (
				<p
					class={classNames(
						`mb-5 hyphens-auto`,

						`first-of-type:first-letter:font-special first-of-type:first-letter:float-left`,
						`first-of-type:first-letter:font-normal`,

						`first-of-type:first-letter:text-[3em]`,
						`first-of-type:first-letter:leading-[0.65em]`,
						`first-of-type:first-letter:pr-2.5`,
						`first-of-type:first-letter:pt-2.5`,

						`md:first-of-type:first-letter:pr-3`,
						`md:first-of-type:first-letter:pt-3`,

						`dark:first-of-type:first-letter:text-alt`,
						`dark:contrast-more:first-of-type:first-letter:text-fg`,
					)}
				>
					<NotionFormattedRichText richText={block.paragraph.rich_text} />
				</p>
			)
		}
		if (block.type === 'image') {
			const image = block.image as {
				caption: {
					text: {
						content: string
					}
				}[]
			}
			const imgSrc = blockImagesMap.get(block.id)
			if (!imgSrc) return null
			return (
				<div class="my-8">
					<Image
						src={imgSrc}
						alt={image.caption.map((c) => c.text.content).join(' ')}
						class="border border-grayMed"
					/>
					{image.caption.length > 0 && (
						<small class="text-grayDark text-sm">
							{image.caption.map((c) => c.text.content).join(' ')}
						</small>
					)}
				</div>
			)
		}
	})
}

<style>
	p {
		-webkit-hyphens: auto;
		-webkit-hyphenate-limit-before: 3;
		-webkit-hyphenate-limit-after: 3;
		-webkit-hyphenate-limit-chars: 6 3 3;
		-webkit-hyphenate-limit-lines: 2;
		-webkit-hyphenate-limit-last: always;
		-webkit-hyphenate-limit-zone: 8%;

		hyphens: auto;
		hyphenate-limit-chars: 6 3 3;
		hyphenate-limit-lines: 2;
		hyphenate-limit-last: always;
		hyphenate-limit-zone: 8%;
	}
</style>
