---
import '@splidejs/splide/css/core'
import Layout from '../../layouts/Layout.astro'
import CollaboratorsGroup from '../../components/CollaboratorsGroup.astro'
import classNames from '../../utils/classNames'
import { loadJson } from '../../../scripts/lib/loadJson'
import { PROJECTS_JSON_PATH } from '../../../scripts/paths'
import type { MappedNotionProject } from '../../../scripts/lib/parseOriginalNotionProjects'
import Thumbnail from '../../components/Thumbnail.astro'
import NotionTextContents from '../../components/NotionTextContents.astro'
import SeeOneMore from '../../components/SeeOneMore.astro'
import ProjectSlider from '../../components/ProjectSlider.astro'
import ImageZoomer from '../../components/ImageZoomer.astro'
import ProjectSliderNav from '../../components/ProjectSliderNav.astro'

export async function getStaticPaths() {
	const notionProjects = await loadJson<MappedNotionProject[]>(
		PROJECTS_JSON_PATH,
	)
	return notionProjects.map((notionProject, idx) => {
		const nextIdx = idx + 1 > notionProjects.length - 1 ? 0 : idx + 1
		const prevIdx = idx - 1 < 0 ? notionProjects.length - 1 : idx - 1
		return {
			params: { slug: notionProject.slug },
			props: {
				project: notionProject,
				prevProject: notionProjects[prevIdx],
				nextProject: notionProjects[nextIdx],
			},
		}
	})
}

export interface Props {
	project: MappedNotionProject
	nextProject: MappedNotionProject
	prevProject: MappedNotionProject
}

const { project, nextProject, prevProject } = Astro.props
---

<Layout title={project.title} withHeaderBg={false}>
	<main class:list={[`flex flex-col`]}>
		<ProjectSlider project={project} />
		<section>
			<ProjectSliderNav />
			<div
				class={classNames([
					`px-6 lg:px-8 leading-normal`,
					`sm:text-xl lg:text-2xl mt-4`,
					`xl:grid xl:grid-cols-[5fr,2fr]`,
					`2xl:grid-cols-[2fr,1fr] xl:gap-8`,
				])}
			>
				<div class={classNames([`md:columns-2 md:gap-6 lg:gap-8`, `mb-16`])}>
					<NotionTextContents blocks={project.blocks} />
				</div>
				<aside class="mb-32 @container/collabs">
					<div
						class={classNames(
							`items-stretch`,
							`grid grid-cols-1 @sm/collabs:grid-cols-2`,
							`text-base lg:text-xl`,
						)}
					>
						<CollaboratorsGroup collaborators={project.clients}>
							Made for
						</CollaboratorsGroup>
						<CollaboratorsGroup collaborators={project.colleagues}>
							Made with
						</CollaboratorsGroup>
						<CollaboratorsGroup collaborators={project.supervisors}>
							Supervised by
						</CollaboratorsGroup>
						<CollaboratorsGroup collaborators={project.institutions}>
							Made @
						</CollaboratorsGroup>
						<CollaboratorsGroup collaborators={project.collaborators}>
							In collaboration with
						</CollaboratorsGroup>
					</div>
				</aside>
			</div>
			<section
				class={classNames(
					`flex flex-col sm:px-6 lg:px-8`,
					`md:grid md:grid-cols-[1fr,0,0,0,1fr] xl:grid-cols-[0,450px,1fr,450px,0]`,
				)}
			>
				<Thumbnail
					{...prevProject}
					highlighted={false}
					rotationClass="rotate-1"
					className="md:border-l border-grayLight"
				/>
				<div class="flex items-center justify-center border-t border-grayLight">
					<SeeOneMore className="hidden xl:block" />
				</div>
				<Thumbnail
					{...nextProject}
					highlighted={false}
					className="xl:border-l md:border-l-grayMed"
					rotationClass="-rotate-1"
				/>
			</section>
		</section>
	</main>
	<ImageZoomer />
</Layout>
